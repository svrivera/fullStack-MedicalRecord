{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianrivh/Desktop/Fullstack-JS/frontend/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; // Imports Axios to define DB depending on enviroment\n\nimport axiosClient from './config/axios'; // Imports components\n\nimport Patients from './components/Patients';\nimport NewRecord from './components/NewRecord';\nimport Record from './components/Record';\n\nfunction App() {\n  // Sets states for the app\n  const [records, saveRecords] = useState([]);\n  const [refresh, saveRefresh] = useState(true); // Defines what to do when a React component is reloaded\n\n  useEffect(() => {\n    if (refresh) {\n      const apiInit = () => {\n        axiosClient.get('/patients').then(res => {\n          // set response as state\n          saveRecords(res.data); // Disabes refresh state\n\n          saveRefresh(false);\n        }).catch(error => {\n          console.log(error);\n        });\n      };\n\n      apiInit();\n    } else {}\n  }, []);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: () => /*#__PURE__*/React.createElement(Patients, {\n      records: records,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 48\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/new\",\n    component: NewRecord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/new\",\n    component: NewRecord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/new/:id\",\n    component: Record,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sebastianrivh/Desktop/Fullstack-JS/frontend/src/App.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Route","Switch","axiosClient","Patients","NewRecord","Record","App","records","saveRecords","refresh","saveRefresh","apiInit","get","then","res","data","catch","error","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,MAAxC,QAAqD,kBAArD,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAKA,SAASC,GAAT,GAAe;AACb;AACA,QAAM,CAACC,OAAD,EAAUC,WAAV,IAAyBX,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACY,OAAD,EAAUC,WAAV,IAAyBb,QAAQ,CAAC,IAAD,CAAvC,CAHa,CAMb;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,OAAJ,EAAa;AACX,YAAME,OAAO,GAAG,MAAM;AACpBT,QAAAA,WAAW,CAACU,GAAZ,CAAgB,WAAhB,EACCC,IADD,CACMC,GAAG,IAAI;AACX;AACAN,UAAAA,WAAW,CAACM,GAAG,CAACC,IAAL,CAAX,CAFW,CAGX;;AACAL,UAAAA,WAAW,CAAC,KAAD,CAAX;AACD,SAND,EAOEM,KAPF,CAOQC,KAAK,IAAI;AACfC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,SATD;AAUD,OAXD;;AAYAN,MAAAA,OAAO;AACR,KAdD,MAcO,CAEN;AAGF,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAE,mBAAM,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEJ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAIE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,MAAlB;AAAyB,IAAA,SAAS,EAAEH,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAME,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,MAAlB;AAAyB,IAAA,SAAS,EAAEA,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAQE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,UAAlB;AAA6B,IAAA,SAAS,EAAEC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CADF;AAeD;;AAED,eAAeC,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\n// Imports Axios to define DB depending on enviroment\nimport axiosClient from './config/axios';\n\n// Imports components\nimport Patients from './components/Patients';\nimport NewRecord from './components/NewRecord';\nimport Record from './components/Record';\n\n\n\n\nfunction App() {\n  // Sets states for the app\n  const [records, saveRecords] = useState([]);\n  const [refresh, saveRefresh] = useState(true);\n\n  \n  // Defines what to do when a React component is reloaded\n  useEffect(() => {\n    if (refresh) {\n      const apiInit = () => {\n        axiosClient.get('/patients')\n        .then(res => {\n          // set response as state\n          saveRecords(res.data);\n          // Disabes refresh state\n          saveRefresh(false);\n        }\n        ).catch(error => {\n          console.log(error);\n        })\n      }\n      apiInit();\n    } else {\n      \n    }\n    \n    \n  }, [] );\n\n  return (\n    <Router>\n      <Switch>\n\n        <Route exact path=\"/\" component={() => <Patients records={records}/>}/>\n\n        <Route exact path=\"/new\" component={NewRecord}/>\n\n        <Route exact path=\"/new\" component={NewRecord}/>\n\n        <Route exact path=\"/new/:id\" component={Record}/>\n        \n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}